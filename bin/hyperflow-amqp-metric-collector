#!/usr/bin/env ruby
# encoding: utf-8

require "amqp"
require "recursive-open-struct"
require "json"

EventMachine.run do
  connection = AMQP.connect(ENV['AMQP_URL'])
  warn "Connected to AMQP broker..."

  channel  = AMQP::Channel.new(connection)
  queue    = channel.queue("", auto_delete: false, durable: true)
  queue.bind("hyperflow.events", routing_key: "job.*.finished")

  queue.subscribe do |payload|
    data = RecursiveOpenStruct.new(JSON.parse(payload))
    if data.metrics
      puts [data.worker, data.thread, data.job, data.executable, data.metrics.execution, data.metrics.stage_in, data.metrics.stage_out, data.metrics.input_size, data.metrics.output_size].join("\t")
    else
      p data
    end
  end
  Signal.trap("INT") { connection.close { EventMachine.stop } }
end